---
title: "Working with Primary data"
subtitle: "`cori.data.fcc`:: an example of data as code"
author: "Olivier Leroy"
date: "October 20 2024"
institute: "Center On Rural Innovation"
fontsize: 20pt
favicon: assets/images/Logo-Mark_Black.png
format:
  revealjs: 
    theme: src/custom_cori.scss
    logo: img/CORI_Logo.png
    css: assets/fonts.css
    footnotes-hover:: true
from: markdown+emoji
editor: visual
---

## Slides are online: 

- Realized in [Quarto](https://quarto.org/) (Reavealjs) 

- Running R and cori.data.fcc

- Hosted/deployed in [GitHub](https://github.com/ruralinnovation/conf_URISA_2023)
 
<br />[https://ruralinnovation.github.io/prez_auber_2024/](https://ruralinnovation.github.io/prez_auber_2024/#/title-slide)

![](img/qr.svg){height="300" fig-align="center"}

## Goals: 

1. Primary data is great! (but can be a pain...)

2. Use code (other pain?) to work with primary data

3. Packaging it will make live easier!

## Plan: Retrace our Journey 

[TODO: rework at the end]
 
## :wave: Hi, I am Olivier Senior Data Engineer 

- Working with primary data: "messy, unstructured data" is upon us

![Source: [Harvard Business Review](https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century)](img/hbrsexiestjob.png){width=800} 

- Socials: [LinkedIn](https://www.linkedin.com/in/olivier-leroy-r/) | [Mastodon](https://fosstodon.org/@defuneste) | [Personal Website](https://branchtwigleaf.com/about.html) 


## Data at Center On Rural Innovation ([CORI](https://ruralinnovation.us/))

1. Rural data: we can't work with aggregate and need to go deeper 

#  Broadband: an important part of our works

## Public-facing apps:  

:::: {.columns} 

::: {.column width="60%"}

![](img/small_bead_tool.gif)

[Rural Broadband Mapping Tool](https://rural-broadband-map.ruralinnovation.us/)

:::

::: {.column width="40%"}

![](img/bb_climate.png)
[Broadband Climate Risk Mitigation Tool](https://broadband-risk.ruralinnovation.us/)

:::

::::

.. and [more!](https://ruralinnovation.us/our-work/research_mapping/) 


## Research work: from ideation to report

::::{.columns } 

::: {.column width="50%"}

![](img/ideation.png)

:::

::: {.column width="50%"}

![Beyond connectivity: The role of broadband in rural economic growth and resilience](img/report_slide.png){height=50%}

:::

::::

# Broadband research is evolving! 

## Federal Communications Commission ([FCC](https://www.fcc.gov/)) 

:::: {.columns} 

::: {.column width="30%"}

![](img/fcc-seal-rgb-2020.svg)

:::

::: {.column width="70%"}

- Agency in charge of regulating "everything" communications

- Lot of useful datasets!

- Their data landscape is evolving fast (now they have a [platform](https://opendata.fcc.gov/)!)

#### **Challenge**: How to work with constant change upstream?
:::

::::


## Federal Communications Commission ([FCC](https://www.fcc.gov/))  

:::: {.columns}

::: {.column width="50%"}


|                      | [Form 477](https://www.fcc.gov/economics-analytics/industry-analysis-division/form-477-resources)             | [National Broadband Map](https://broadbandmap.fcc.gov/home)                                                                                                                                                                          |
|-------------------------|------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| US Census Boundaries | 2010             | 2020                                                                                                                                                                                                                                 |
| Type of recording    | self declarative | self declarative                                                                                                                                                                                                                     |
| Granularity          | Census blocks     | [Locations](https://broadbandmap.fcc.gov/location-summary/fixed?version=dec2022&location_id=1350199199&addr1=390+MORGAN+ST&addr2=OBERLIN%2C+OH+44074&zoom=15.00&vlon=-82.231744&vlat=41.287448&br=r&speed=25_3&tech=1_2_3_4_5_6_7_8) |
| Services             | Mobile/Fixed | Mobile/Fixed                                                                                                                                                                                                                     |
|Timeframe | 2014-2021 | 2022 - *Ongoing*                                                                                                                                                                                                                     |
| Releases | **twice a year** | **twice a year[^version]**                                                                                                                                                                                                               |
| Size | **400MB/year** | **22GB/year**                                                                                                                                                                                                                            |

[^version]: One release can have multiple versions


:::

::: {.column width="50%"}


#### Broadband access since 2014 but:
  *  2 **voluminous** datasets, hundreds of files  

  * "No road safety barriers": multiple encodings, erronous values (and more..)

:::

::::



# Behind the scene: 

## How it started: Manuel Extraction ...

:::: {.columns}

::: {.column width="50%"}

![](img/manual_fcc.mov)


:::

::: {.column width="50%"}

* :repeat: Repeat for every State  (56)
* :repeat: Repeat for every version  (??)
* :red_circle: Error prone (500 hundred clicks)

:::

::::


## ... Automation with code ...

:::: {.columns}

::: {.column width="50%"}

```{bash}
#| eval: false
#| echo: true

# [...] 
# Download all FCC data needed
all : dirs dl_file list_file

include config.mk

## dirs:	Create specific dirs to download data
dirs : config.mk
	@pwd
	@mkdir -p $(DATA_PATH)
	echo "create $(DATA_PATH)"

## dl_file:	Create a list of files availiable, download them
dl_file : $(CSV_SRC) get_csv_dl.R
	Rscript get_csv_dl.R $(CSV_SRC)
	Rscript list_file_dl.R $(DATA_PATH) $(CSV_SRC)
.PHONY : dl_file

## list_file: Create a list of downloaded file
list_file : list_file_dl.R $(CSV_SRC)
	Rscript report_dl.R $(DATA_PATH) 
.PHONY : list_file

# [...]
```

:::

::: {.column width="50%"}

- New projects ->  New specs 

#### **challenge**: copy/pasting and maintaining X **similar** code sources 

- Spoiler: Not everyone like SQL 

#### **challenge**: make it more accessible

:::

::::

## Slow and lacked reactivity

> You can quote me.... "My manager regularly asks for quick turn deliveries".... "He's bullies the team with short delivery times"


1. The Extract Load Transform (ELT) was **slow** (or too costly)

2. Lack of **reactivity** to change in the business/research (i.e., "We need ISP footprints" / "We should exclude locations with bad latency")
 
## DuckDB solved the lack of reactivity

DuckDB ([Parquet](https://parquet.apache.org/) / [Arrow](https://arrow.apache.org/) / [OLAP](https://en.wikipedia.org/wiki/Online_analytical_processing)) and S3 (Simple Storage Service of AWS

![](img/duckplyr-duckDB.png){fig-align="center"}

Added benefits: **lower cost**, less contraints on permissions -> **share it**?

## ... Code Packaged

:::: {.columns}

::: {.column width="50%"}

::: {.panel-tabset}

### Visual
![](img/dl_nbm_smaller.mov)

### Code

```{r}
#| label: example_dl_nbm
#| eval: false
#| echo: true
library(cori.data.fcc)

dir <- "data_swamp/nbm/"

get_nbm_release()

nbm_data <- get_nbm_available()

system(sprintf("mkdir -p %s", dir))

dl_nbm(
  path_to_dl = "data_swamp/nbm",
  release_date = "June 30, 2023",
  data_type = "Fixed Broadband",
  data_category = "Nationwide",
)
# part to check if dl was successful 
num_files <- get_nbm_available() |>
  dplyr::filter(release == "June 30, 2023" &
                data_type == "Fixed Broadband" &
                data_category == "Nationwide") |>
  nrow()

files_dl <- length(list.files(dir,
                              pattern = "*.zip"))

identical(num_files, files_dl)
# TRUE

```

:::

:::

::: {.column width="50%"}

- Reduce errors 

- Complexity is in **one** place and **abstracted** so we can focus on what bring **value**! 

:::

::::


# cori.data.fcc

## What is packaged code?

### One white lie: Code that work outside of "my" computer 

### Benefits from the language ecosystem

- Tested against github runner: it does not just work on my computer! 

- [Website](https://ruralinnovation.github.io/cori.data.fcc/index.html) to share it/distribute it

## Why sharing it?

- Open source is :

  * Way to **share**: Everyone can use it

  * Way to **publish**: Everyone can read the code and contribute

  * A place were we can **exchange** in a constructive way 

- CORI's Missions and values: 

  * Bring good broadband to rural America 

  * Change narrative around rural America


## How to get it: 

The source code is hosted on [GitHub](https://github.com/ruralinnovation/cori.data.fcc) (Version control)

You need the R package [{remotes}](https://remotes.r-lib.org/).

```{r}
#| eval: false
#| label: install-package
#| echo: true
 
install.packages("remotes")
remotes::install_github("ruralinnovation/cori.data.fcc")
```

```{r}
#| echo: false
library(cori.data.fcc)
```

:construction: Check the version you have and see what new versions are offering :construction:
```{r}
#| label: version-package
#| echo: true
packageVersion("cori.data.fcc")
```


## What can it do: Choose your own adventure!

* I need to go back to the source: [Download data from FCC](https://ruralinnovation.github.io/cori.data.fcc/articles/Check_and_download_NBM_data.html)

* I need primary data but working with hundreds of CSV is not for me:  Download raw data from CORI ([NBM](https://ruralinnovation.github.io/cori.data.fcc/reference/get_county_nbm_raw.html) / [Form 477](https://ruralinnovation.github.io/cori.data.fcc/reference/get_f477.html))

* Census block is perfect for me:  Download tranformed data for NBM from CORI ([ISP](https://ruralinnovation.github.io/cori.data.fcc/reference/get_frn_nbm_bl.html) / [County](https://ruralinnovation.github.io/cori.data.fcc/reference/get_county_nbm_raw.html))

* Guide you in those steps!

  
##  Packaging code = extra team member :construction_worker:
  
> we’ve talked about how packages can act like team members such as the **IT Guy**, **Analyst**, Tech Lead, or Project Manager.[^emily]

>  [...] developed packages are [...] extra expert team members.[^dataanalysisreuse]

[^emily]: [https://www.emilyriederer.com/post/team-of-packages/#collaboration](https://www.emilyriederer.com/post/team-of-packages/#collaboration)

[^dataanalysisreuse]: [https://milesmcbain.xyz/posts/data-analysis-reuse/](https://milesmcbain.xyz/posts/data-analysis-reuse/)

## Packaging code = Increase speed to inovation / insight 
 
- Functions designed to get data and load it in your environment  

- **Capitalize on it**! 

  * New project that is requiring [FCC staff block estimates](https://www.fcc.gov/staff-block-estimates) -> add it!


# Examples of uses cases

## First Example: Block covered BEAD like

Place holder for Camdem blog post


## What are the ISP in Ohio? 

::: {.panel-tabset}

### Visual

```{r display_graph}
#| echo: FALSE
#| eval: TRUE
library(igraph)
library(crosstalk);library(DT);library(threejs)


oh_graph <- readRDS("data//oh_graph.rds")

draw_me_a_graph <- function(x, ...) {
  threejs::graphjs(x,
          vertex.label = V(x)$provider_name, 
          vertex.color = rep(2, vcount(x)),
          vertex.size = .5, 
          edge.color = "black",
          edge.width = 3, ...)
}

sd = SharedData$new(data.frame("provider_name" = V(oh_graph)$provider_name,
                               "cnt_bl" = V(oh_graph)$cnt_bl,
                               "cnt_rel" = V(oh_graph)$cnt_rel))
bscols(
  datatable(sd, rownames=FALSE, 
            colnames = c('Provider Name', 'Cnt Block', 'Cnt Rel.'), 
            options = list(pageLength = 5, lengthMenu = c(5, 10, 15, 20))),
  draw_me_a_graph(oh_graph, brush=TRUE, crosstalk=sd)
)
```


### Code 

```{r}
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "8,43"
library(tigris);library(cori.data.fcc);library(igraph);library(dplyr) 
library(crosstalk);library(DT);library(threejs)

oh<- tigris::counties(state = "39") # tigris is a great example of data as code

talk_to_me <- function(x) {
    message(sprintf("Love Ohio: %s", x))
    cori.data.fcc::get_nbm_bl(x)
}
oh_nbm <- lapply(oh$GEOID, talk_to_me) |> dplyr::bind_rows()

oh2_nbm <- oh_nbm[!is.na(oh_nbm$combo_frn), ]

od_me <- function(x) {
  
  temp <- oh2_nbm[x, "array_frn"][[1]]
  if (length(temp) == 1L)
  {
    return(data.frame(V1 = temp, V2 = NA))
  }
  as.data.frame(t(combn(temp, 2)))
}

od <- lapply(1:nrow(oh2_nbm), od_me) |> dplyr::bind_rows()
od <- od[!is.na(od$V2),]

bob <- rbind(data.frame(frn = od$V1, geoid_bl = od$geoid_bl), 
             data.frame(frn = od$V2, geoid_bl = od$geoid_bl))

cnt_bl <- summarise(bob, cnt_bl = n_distinct(geoid_bl), cnt_rel = n(), .by = frn)

od <- od[!is.na(od$V2),]

od$combo <- paste(od$V1, od$V2, sep = " - ")
od$count <- 1

rel <- od |> dplyr::summarize(n = sum(count), .by = combo)
give_me_from <- function(x) unlist(strsplit(x, " - "))[1]
give_me_to <- function(x) unlist(strsplit(x, " - "))[2]
rel$from <- sapply(rel$combo , give_me_from)
rel$to <- sapply(rel$combo, give_me_to)

fcc_slim <- cori.data.fcc::fcc_provider[, c("frn", "provider_name")]
frn <- data.frame( frn = unique(c(rel$from, rel$to)))
frn <- merge(frn, fcc_slim, by.x = "frn", by.y = "frn")
frn <- merge(frn, cnt_bl, by.x = "frn", by.y = "frn")

oh_graph <- graph_from_data_frame(rel[,c("from", "to")], directed = FALSE, vertices = frn)

oh_graph <- graph_from_data_frame(rel[,c("from", "to")], directed = FALSE, vertices = frn)

draw_me_a_graph <- function(x, ...) {
  threejs::graphjs(x,
          vertex.label = V(x)$provider_name, 
          vertex.color = rep(2, vcount(x)),
          vertex.size = .5, 
          edge.color = "black",
          edge.width = 3, ...)
}

sd = SharedData$new(data.frame("provider_name" = V(oh_graph)$provider_name,
                               "cnt_bl" = V(oh_graph)$cnt_bl,
                               "cnt_rel" = V(oh_graph)$cnt_rel))
bscols(
  datatable(sd, rownames=FALSE, 
            colnames = c('Provider Name', 'Cnt Block', 'Cnt Rel.'), 
            options = list(pageLength = 5, lengthMenu = c(5, 10, 15, 20))),
  draw_me_a_graph(oh_graph, brush=TRUE, crosstalk=sd)
)

```

:::

## Summary

(Primary) data is only useful if you can **effectively** use it.

- Data as code = less pain working with primary data: 

  * Providing data is not enough: need those extra "team members" to guide you 

  * Metadata is hard: data as code help with that!

  * Enhance reproducibility (accountability with a fake noze) 

- Easier to **capitalize/build** on it: generating less tech debt 

- Discusion: When integrating business logic and moving away from primary data? 

## Contacts

Website: [https://ruralinnovation.us](https://ruralinnovation.us)


[LinkedIn](https://www.linkedin.com/company/11099658) | [Twitter](https://twitter.com/Ruralinno) | [Facebook](https://www.facebook.com/RuralInno/) | [Instagram](https://www.instagram.com/ruralinno/) | [YouTube](https://www.youtube.com/channel/UCyqbtSrv4Nad9vVv4dQptcA) 
